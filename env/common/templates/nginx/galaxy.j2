upstream galaxy {
    server {{ galaxy_config.gravity.gunicorn.bind }};
}

{% for alias in aliases.split(',')  %}

server {
    listen 443 ssl;
    server_name {{ alias }};
    return 307 $scheme://{{inventory_hostname}}$request_uri;
}

{% endfor %}

server {
    # Listen on port 443
    listen        *:443 ssl default_server;

    # The virtualhost is our domain name
    server_name   "{{ inventory_hostname }}";

    # Our log files will go here.
    access_log  /var/log/nginx/access.log;
    error_log   /var/log/nginx/error.log;

    client_max_body_size 0;

    location / {
        # This is the backend to send the requests to.
        proxy_pass http://galaxy;

        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;

        error_page 504 =200 @maintenance;
        error_page 502 =200 @maintenance;
        error_page 401 =200 @noaccess;
        error_page 404 =200 @notfound;

    }

    location /_x_accel_redirect/ {
        add_header Access-Control-Allow-Origin $upstream_http_access_control_allow_origin;
        internal;
        alias /;
    }

    # handle archive create via mod-zip
    location {{ galaxy_file_path }} {
        internal;
        alias {{ galaxy_file_path }};
    }

    location @maintenance {
      root /srv/galaxy/server/static/;
      try_files $uri /maintenance.html =503;
    }

    location @noaccess {
      root /srv/galaxy/server/static/;
      try_files $uri /401.html =503;
    }

    location @notfound {
      root /srv/galaxy/server/static/;
      try_files $uri /404.html =503;
    }



    # Static files can be more efficiently served by Nginx. Why send the
    # request to uWSGI which should be spending its time doing more useful
    # things like serving Galaxy!
    location /static {
        alias {{ galaxy_server_dir }}/static;
        expires 24h;
    }

    location /robots.txt {
        alias {{ galaxy_server_dir }}/static/robots.txt;
    }

    location /favicon.ico {
        alias {{ galaxy_server_dir }}/static/favicon.ico;
    }


#    # The style directory is in a slightly different location
#    location /static/style {
#        alias {{ galaxy_server_dir }}/static/style;
#        expires 24h;
#     }
#
#      location /static/scripts/bundled {
#        alias {{ galaxy_server_dir }}/static/dist;
#
#        expires 24h;
#    }
#
#    # In Galaxy instances started with run.sh, many config files are
#    # automatically copied around. The welcome page is one of them. In
#    # production, this step is skipped, so we will manually alias that.
#    #location /static/welcome.html {
#    #    alias {{ galaxy_server_dir }}/static/welcome.html.sample;
#    #    expires 24h;
#    #}

    # serve visualization and interactive environment plugin static content
    location ~ ^/plugins/(?<plug_type>[^/]+?)/((?<vis_d>[^/_]*)_?)?(?<vis_name>[^/]*?)/static/(?<static_file>.*?)$ {
        alias {{ galaxy_server_dir }}/config/plugins/$plug_type/;
        try_files $vis_d/${vis_d}_${vis_name}/static/$static_file
                  $vis_d/static/$static_file =404;
    }

    # tusd
    location /api/upload/resumable_upload {
     # Disable request and response buffering
         proxy_request_buffering  off;
         proxy_buffering          off;
         proxy_http_version       1.1;

         # Add X-Forwarded-* headers
         proxy_set_header X-Forwarded-Host $host;
         proxy_set_header X-Forwarded-Proto $scheme;

         proxy_set_header         Upgrade $http_upgrade;
         proxy_set_header         Connection "upgrade";
         client_max_body_size     0;
         proxy_pass http://localhost:{{galaxy_tusd_port}}/files;
     }


     location /flower {
         proxy_pass http://localhost:5555;
         proxy_set_header Host $host;
         proxy_redirect off;
         proxy_http_version 1.1;
         proxy_set_header Upgrade $http_upgrade;
         proxy_set_header Connection "upgrade";
     } 


    # https://docs.galaxyproject.org/en/master/admin/special_topics/gtn.html
    location /training-material/ {
        proxy_pass https://training.galaxyproject.org/training-material/;
    }

    location /reports/ {
        proxy_pass http://{{ galaxy_config.gravity.reports.bind }}:/;
        # uwsgi_pass           127.0.0.1:9001;
        # uwsgi_param          UWSGI_SCHEME $scheme;
        # include              uwsgi_params;
        # auth_basic "Restricted Content";
        # auth_basic_user_file /etc/nginx/.htpasswd-reports;
    }

    location /galaxy-terms/ {
        alias /srv/galaxy/server/static/tos/;
    }

    location /docs/ {
        alias /srv/galaxy/server/static/docs/;
    }

    location /tos/ {
        proxy_pass  http://127.0.0.1:8081/;
    }

    location /nga/ {
        proxy_pass http://127.0.0.1:8888/;
    }

    
    location /jenkins {
        proxy_set_header        Host $host:$server_port;
        proxy_set_header        X-Real-IP $remote_addr;
        proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;

        # Fix the "It appears that your reverse proxy set up is broken" error.
        proxy_pass          http://127.0.0.1:4000;
        proxy_read_timeout  90;
    }

    location /server_status {
        stub_status on;

        access_log off;
        allow 127.0.0.1;
        allow {{ galaxy_ip }};
        deny all;
    }
}
